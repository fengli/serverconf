server {
    listen   80 default;
    server_name ikandou.com;
    client_max_body_size       80M;    
    # no security problem here, since / is alway passed to upstream
    root /home/okidogi/projects/ohbooklist.com/ohbooklist;
    # serve directly - analogous for static/staticfiles

    if ($http_user_agent ~* LWP::Simple|BBBike|wget) {
        return 403;
     }
     
    location /static/ {
        # if asset versioning is used
        if ($query_string) {
            expires max;
        }
    }
    location /staticadmin/ {
        # this changes depending on your python version
        alias /home/okidogi/virtualenv/ohbooklist/lib/python2.6/site-packages/django/contrib/admin/media/;
    }
    location /media/ {
        internal;
        root /home/okidogi/projects/ohbooklist.com/ohbooklist;
    }
    location /publicmedia/ {
        alias /home/okidogi/projects/ohbooklist.com/ohbooklist/media/;
    }
    
    location / {
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 100;
        proxy_read_timeout 100;
        proxy_pass http://localhost:8000/;
    }
    # what to serve if upstream is not available or crashes
    # error_page 500 502 503 504 /static/50x.html;
}

server {
    listen   80;
    server_name flower.ikandou.com;
    # no security problem here, since / is alway passed to upstream
    root /home/okidogi/projects/ohbooklist.com/ohbooklist;
    # serve directly - analogous for static/staticfiles
    location /static/ {
        root /home/okidogi/virtualenv/ohbooklist/lib/python2.6/site-packages/flower;
    }
    location /admin/media/ {
        # this changes depending on your python version
        root /home/okidogi/virtualenv/ohbooklist/lib/python2.6/site-packages/django/contrib;
    }
    location / {
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 10;
        proxy_read_timeout 10;
        proxy_pass http://localhost:5555/;
    }
    # what to serve if upstream is not available or crashes
    error_page 500 502 503 504 /static/50x.html;
}

server {
    listen 80;
    server_name sentry.ikandou.com;
    # no security problem here, since / is alway passed to upstream

    location /admin/media/ {
    # this changes depending on your python version
	root /home/okidogi/virtualenv/ohbooklist/lib/python2.6/site-packages/django/contrib;
    }
    location / {
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 50;
        proxy_read_timeout 50;
        proxy_pass http://localhost:9000/;
    }
}

# server {
# 	listen   80 default;
# 	server_name  localhost;

# 	access_log  /var/log/nginx/localhost.access.log;

# 	location / {
# 		root   /var/www/nginx-default;
# 		index  index.html index.htm;
# 	}

# 	location /doc {
# 		root   /usr/share;
# 		autoindex on;
# 		allow 127.0.0.1;
# 		deny all;
# 	}

# 	location /images {
# 		root   /usr/share;
# 		autoindex on;
# 	}

# 	#error_page  404  /404.html;

# 	# redirect server error pages to the static page /50x.html
# 	#
# 	#error_page   500 502 503 504  /50x.html;
# 	#location = /50x.html {
# 	#	root   /var/www/nginx-default;
# 	#}

# 	# proxy the PHP scripts to Apache listening on 127.0.0.1:80
# 	#
# 	#location ~ \.php$ {
# 		#proxy_pass   http://127.0.0.1;
# 	#}

# 	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
# 	#
# 	#location ~ \.php$ {
# 		#fastcgi_pass   127.0.0.1:9000;
# 		#fastcgi_index  index.php;
# 		#fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
# 		#includefastcgi_params;
# 	#}

# 	# deny access to .htaccess files, if Apache's document root
# 	# concurs with nginx's one
# 	#
# 	#location ~ /\.ht {
# 		#deny  all;
# 	#}
# }


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#listen   8000;
#listen   somename:8080;
#server_name  somename  alias  another.alias;

#location / {
#root   html;
#index  index.html index.htm;
#}
#}


# HTTPS server
#
#server {
#listen   443;
#server_name  localhost;

#ssl  on;
#ssl_certificate  cert.pem;
#ssl_certificate_key  cert.key;

#ssl_session_timeout  5m;

#ssl_protocols  SSLv2 SSLv3 TLSv1;
#ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
#ssl_prefer_server_ciphers   on;

#location / {
#root   html;
#index  index.html index.htm;
#}
#}
